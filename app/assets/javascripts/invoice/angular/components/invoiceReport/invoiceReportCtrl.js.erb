(function() {
  'use strict';
  angular.module('somsri.invoice.invoice_report', [
    ])
  .controller('invoiceReportCtrl', ['$compile', '$scope', '$window', '$filter', '$rootScope', 'invoiceReportService', '$timeout', function($compile, $scope, $window, $filter, $rootScope, service, $timeout) {
    $rootScope.menu = "ใบเสร็จ"
    var ctrl = this
    var angularScopeRoot = 'angular.element(document.getElementById("angularCtrl")).scope().$root'
    var angularScopeInvoice = 'angular.element(document.getElementById("angularCtrl")).scope().invoiceReport'
    ctrl.invoice = [];

    $rootScope.loadAndAuthorizeResource("invoice", function(){
      var main_table = $('#invoice-table');
      var print_table = $('#for-print-table');
      ctrl.currentPage = 1;
      ctrl.searchKeyword = '';
      ctrl.grade_name = "All"
      ctrl.sort = 'invoices.id';
      ctrl.order = 'desc';

      // default last 7 days
      ctrl.end_date = new Date();
      ctrl.start_date = new Date(new Date().setMonth(new Date().getMonth() - 1));

      function cleanDate(date){
        if(!date || new Date(date) == "Invalid Date"){return;}
        var cleanedDate = new Date()
        cleanedDate.setDate(date.getDate())
        cleanedDate.setMonth(date.getMonth())
        cleanedDate.setYear(date.getFullYear())
        return cleanedDate
      }

      function filterDate(value, row, index) {
        if (value) {
          return $filter('date')(value, 'd/MM/yyyy hh:mm');
        }
        return "-";
      }

      function filterCurrency(value, row, index) {
        if (value) {
          return $filter('number')(value.toFixed(2), 2);
        }
        return "-";
      }

      function linkInvoiceID(value, row, index) {
        if (value) {
          var func = angularScopeRoot + '.openSlip(' + value + ', "invoice_report");'
          var link = "<a herf='javascript:void(0)' onclick='" + func + "'>" + value +"</a>";
          return link;
        }
        return "-";
      }

      function linkCancelInvoice(value, row, index) {
        if(!row.is_cancel && ctrl.thisDay(row.created_at)){
          ctrl.invoice[index] = row;
          var func = angularScopeInvoice + '.cancelInvoiceModal('+ angularScopeInvoice+ '.invoice['+ index +'])';
          var link = "<a herf='javascript:void(0)' onclick='" + func + "'><i class='fa fa-times-circle'></i>&nbsp;ยกเลิกใบเสร็จ</a>";
          return  link;
        }
        return '';
      }

      ctrl.pageChanged = function() {
        getStudents()
      };

      ctrl.switchGrade = function(grade_name) {
        ctrl.grade_name = grade_name
        getStudents()
      }

      ctrl.search = function() {
        getStudents();
      }

      var bootstrapTableOptions = {
        onSort: function(name, order){
          ctrl.sort = name;
          ctrl.order = order;
          getStudents()
        },
        customSort: function(){},
        columns: [{
          field: 'id',
          title: 'Invoice #',
          classes: 'text-right',
          sortable: true,
          formatter: linkInvoiceID
        },{
          field: 'students.full_name',
          title: 'ชื่อนักเรียน',
          sortable: true,
        },{
          field: 'grade_name',
          title: 'ชั้น',
          sortable: true,
        },{
          field: 'parents.full_name',
          title: 'ผู้ปกครอง',
          sortable: true,
        },{
          field: 'users.full_name',
          title: 'ผู้รับเงิน',
          sortable: true,
        },{
          field: 'created_at',
          title: 'วันที่ชำระ',
          sortable: true,
          formatter: filterDate
        },{
          field: 'payment_methods.payment_method',
          title: 'ชำระโดย',
          class: 'payment-width',
          sortable: true,
        },{
          field: 'line_items.amount',
          title: 'ยอดชำระ',
          class: 'text-currency',
          sortable: true,
          formatter: filterCurrency,
        },{
          field: 'invoice_statuses.name',
          title: 'สถานะ',
          class: 'for-display',
          sortable: true,
        },{
          field: '',
          title: '',
          class: 'for-display',
          formatter: linkCancelInvoice,
        }],
      }

      print_table.bootstrapTable(bootstrapTableOptions);
      main_table.bootstrapTable($.extend(bootstrapTableOptions, {toolbar: "#date-filter"}));

      function getStudents() {
        ctrl.start_date = cleanDate(ctrl.start_date)
        ctrl.end_date = cleanDate(ctrl.end_date)
        if(!ctrl.currentPage){ ctrl.currentPage = 1 }
          service.getGrades().then(function(grade_resp) {
            ctrl.currentGradeString = ctrl.grade_name
            ctrl.grades = grade_resp.data
            service.getInvoices(ctrl.grade_name, ctrl.searchKeyword, ctrl.start_date, ctrl.end_date, ctrl.currentPage, ctrl.sort, ctrl.order).then(function(resp) {
              ctrl.datas = [];
              if (resp.data && resp.data.invoices){
                ctrl.datas = resp.data.invoices
                ctrl.totalItems = resp.data.total_records;
                ctrl.currentPage = resp.data.current_page;
              } else {
                ctrl.totalItems = 0;
                ctrl.currentPage = 0;
              }
              ctrl.maxSize = 5;
              main_table.bootstrapTable('load', ctrl.datas);
            });
          });
      }

      ctrl.getStudentsForPrint = function() {
        ctrl.start_date = cleanDate(ctrl.start_date)
        ctrl.end_date = cleanDate(ctrl.end_date)
        service.getInvoices(ctrl.grade_name, ctrl.searchKeyword, ctrl.start_date, ctrl.end_date, null, ctrl.sort, ctrl.order).then(function(resp) {
          if (resp.data && resp.data.invoices){
            print_table.bootstrapTable('load', ctrl.datas = resp.data.invoices);
            window.print();
          }
        });
      }

      ctrl.cancelInvoice = function() {
        service.cancelInvoice(ctrl.selectedInvoice.id).then(function(resp) {
          if(resp.data[0] == "SUCCESS"){
            ctrl.selectedInvoice.is_cancel = true;
            ctrl.selectedInvoice.status_name = "ยกเลิก";
            $('#cancelInvoiceModal').modal('hide');
            getStudents()
          }
        });
      }

      ctrl.cancelInvoiceModal = function(invoice) {
        ctrl.selectedInvoice = invoice;
        $('#cancelInvoiceModal').modal('show');
      }

      ctrl.thisDay = function(date) {
        var today = new Date();
        var d = new Date(date);
        return today.toDateString()===d.toDateString();
      }

      ctrl.optionsChange = function() {
        getStudents()
      }

      ctrl.openStartDatePopup = function() {
        ctrl.startDatePopup.opened = true;
      };

      ctrl.startDatePopup = {
        opened: false
      };

      ctrl.openEndDatePopup = function() {
        ctrl.endDatePopup.opened = true;
      };

      ctrl.endDatePopup = {
        opened: false
      };

      getStudents();

    });
}]);
})();
