(function() {
  'use strict';
  angular.module('somsri.invoice.studentReport', [
  ])
  .controller('studentReportCtrl', ['$compile', '$scope', '$window', '$filter', '$rootScope', 'studentReportService', '$timeout', function($compile, $scope, $window, $filter, $rootScope, studentReportService, $timeout) {
    $rootScope.menu = "รายงาน"
    var ctrl = this
    $rootScope.loadAndAuthorizeResource("invoice", function(){
      ctrl.currentPage = 1;
      ctrl.grade_name = "All"
      ctrl.currentInvoiceStatus = null;
      ctrl.total = { other_fee: 0.0, amount: 0.0, tuition_fee: 0.0 }
      ctrl.pageChanged = function() {
        getStudents()
      };

      ctrl.switchGrade = function(grade_name) {
        ctrl.grade_name = grade_name
        getStudents();
        getInvoiceTotalAmount();
      }

      ctrl.switchYear = function(year) {
        ctrl.currentYearString = year
        getSemesters();
        getStudents();
        getInvoiceTotalAmount();
      }

      ctrl.switchSemester = function(semester) {
        ctrl.currentSemesterString = semester
        getStudents();
        getInvoiceTotalAmount();
      }

      ctrl.invoiceStatusFilter = function() {
        if (ctrl.currentInvoiceStatus == null) {
          ctrl.currentInvoiceStatus = "unpaid";
        } else {
          ctrl.currentInvoiceStatus = null;
        }
        getStudents();
        getInvoiceTotalAmount();
      }

      function getStudents() {
        studentReportService.getGrades().then(function(grade_resp) {
          ctrl.currentGradeString = ctrl.grade_name
          ctrl.grades = grade_resp.data
          studentReportService.getStudents(ctrl.grade_name, ctrl.currentPage, ctrl.currentYearString, ctrl.currentSemesterString, ctrl.currentInvoiceStatus).then(function(resp) {
            ctrl.datas = [];
            if (resp.data[0] && resp.data[0].datas){
              ctrl.datas = resp.data[0].datas
              ctrl.students = resp.data[0].datas
              ctrl.totalItems = resp.data[0].total_records;
              ctrl.currentPage = resp.data[0].current_page;
            }
            ctrl.maxSize = 5;
          });
        });
      }

      function getInvoiceTotalAmount(){
        studentReportService.getInvoiceTotalAmount(ctrl.grade_name, ctrl.currentYearString, ctrl.currentSemesterString, ctrl.currentInvoiceStatus).then(function(resp) {
          ctrl.total.other_fee = resp.data[0].other_fee
          ctrl.total.tuition_fee = resp.data[0].tuition_fee
          ctrl.total.amount = resp.data[0].amount
        });
      }

      function getYears() {
        var nowDate = new Date();
        ctrl.current_year = nowDate.getFullYear() + 543;
        ctrl.currentYearString = ctrl.current_year
        studentReportService.getYears().then(function(resp) {
          ctrl.years = resp.data;
        });
      }

      function getSemesters() {
        studentReportService.getSemesters(ctrl.currentYearString).then(function(resp) {
          ctrl.semesters = resp.data;
          ctrl.currentSemesterString = ctrl.semesters[ctrl.semesters.length - 1]
          getStudents();
          getInvoiceTotalAmount();
          console.log(ctrl.semesters)
        });
      }

      getYears();
      getSemesters();

    });
  }]);
})();
