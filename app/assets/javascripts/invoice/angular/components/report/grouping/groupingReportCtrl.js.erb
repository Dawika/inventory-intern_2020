(function() {
  'use strict';
  angular.module('somsri.invoice.groupingReport', [
  ])
  .controller('groupingReportCtrl', ['$compile', '$scope', '$window', '$filter', '$rootScope', 'groupingReportService', '$timeout', 'CSV', '$uibModal', 'moment', function($compile, $scope, $window, $filter, $rootScope, service, $timeout, CSV, $uibModal, moment) {
    $rootScope.menu = "รายงานแยกตามประเภท"
    var ctrl = this

    $rootScope.loadAndAuthorizeResource("invoice", function(){
      // default last 7 days
      ctrl.end_date = new Date();
      ctrl.start_date = new Date(new Date().setMonth(new Date().getMonth() - 1));
      ctrl.options = null

      function loadData(){
        ctrl.start_date = cleanDate(ctrl.start_date)
        ctrl.end_date = cleanDate(ctrl.end_date)
        service.getGroupingReport(ctrl.start_date, ctrl.end_date, ctrl.options).then(function(resp) {
          ctrl.datas = resp.data
          ctrl.options = resp.data.options
          var reportMode = getReportMode()
          if(reportMode == "per_student"){
            ctrl.column_invoice_id = "Invoice"
            ctrl.first_column = "ชื่อ"
            ctrl.column_classroom = "ชั้น"
            ctrl.isPerStudent = true
            ctrl.isPerDay = false
          }else{
            ctrl.first_column = "วันที่"
            ctrl.isPerStudent = false
            ctrl.isPerDay = true
          }
        });
      }

      function getReportMode(){
        if(ctrl.end_date && ctrl.start_date && ctrl.end_date.toDateString() == ctrl.start_date.toDateString()){
          return "per_student"
        }else{
          return "per_day"
        }
      }

      function cleanDate(date){
        if(!date || new Date(date) == "Invalid Date"){return;}
        var cleanedDate = new Date()
        cleanedDate.setDate(date.getDate())
        cleanedDate.setMonth(date.getMonth())
        cleanedDate.setYear(date.getFullYear())
        return cleanedDate
      }

      ctrl.selectDate = function(selected_date){
        selected_date = moment(selected_date, "DD/MM/YYYY").toDate()
        ctrl.start_date = cleanDate(selected_date)
        ctrl.end_date = ctrl.start_date
        ctrl.optionsChange()
      }

      ctrl.optionsChange = function() {
        // check date incorrect input
        if(ctrl.start_date === undefined || ctrl.end_date === undefined){return}
        loadData()
      }

      ctrl.openStartDatePopup = function() {
        ctrl.startDatePopup.opened = true;
      };

      ctrl.startDatePopup = {
        opened: false
      };

      ctrl.openEndDatePopup = function() {
        ctrl.endDatePopup.opened = true;
      };

      ctrl.endDatePopup = {
        opened: false
      };

      loadData()

    });
  }]);
})();
