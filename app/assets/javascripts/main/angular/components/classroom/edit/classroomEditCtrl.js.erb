(function() {
  'use strict';
  angular.module('somsri.main.classroom_edit', [
    ])
  .controller('classroomEditCtrl', ['$rootScope','classroomEditService','$scope', '$uibModal', '$state', 'translateFilter', function($rootScope, service, $scope, $uibModal, $state, translateFilter) {
    $rootScope.menu = translateFilter('setting')
    var ctrl = this
    ctrl.classroomId = $state.params.id
    $rootScope.loadAndAuthorizeResource("school", function(){

      function imgFormatter(imgUrl) {
        if (imgUrl) {
          return '<div class="img-bg circle fix-img img-34x34" style="background: url('+ imgUrl +')"></div>';
        }
        return '<div class="img-bg bg-light-gray circle fix-img img-34x34"><i class="fa fa-user icon-default-img" aria-hidden="true"></i></div>'
      }

      function nameFormatter(name, url) {
        if(name){
          return '<a href="' + url + '" target="_blank" >' + name + '</a>';
        }else{
          return '<a href="' + url + '" target="_blank" >-</a>';
        }
      }

      var angularCtrlStr = "angular.element(document.getElementById('angularCtrl')).scope().edit"

      var tableColumnSetting = [
        { field: 'img', class:'img-column font1_2em', title: translateFilter('full_name_1'), width: "10%"},
        { field: 'name', class:"name-column center-vertical-padding font1_2em", width: "70%"},
        { field: 'unselect', class: "unselect-column center-vertical-padding text-right font1_2em", title: translateFilter('amount2') + " 0 " + translateFilter('person_unit'), width: "20%"}
      ]

      service.getClassroom(ctrl.classroomId).then(function(resp) {
        ctrl.classroom = resp.data
      });

      function formattingTeacherData(data) {
        var result = []
        if(data){
          data.forEach(function(teacher) {
            var onClick = angularCtrlStr + '.removeTeacher(' + teacher.id + ')'
            result.push({
              id: teacher.id,
              img: imgFormatter(teacher.img),
              name: nameFormatter(teacher.name, '/somsri_payroll#/employees/' + teacher.id),
              unselect: '<i class="fa fa-times cursor-pointer color-red" aria-hidden="true" onclick="' + onClick + '"></i>'
            })
          });
        }
        return result
      }

      function getCurrentTeacherIds(){
        var teacherIds = []
        $('#teacher-list').bootstrapTable('getData').forEach(function(teacher) {
          teacherIds.push(teacher.id)
        })
        return teacherIds
      }

      function displayTeacherAmount(){
        $('#teacher-list th[data-field="unselect"] .th-inner').html(translateFilter('amount2') + " " + ctrl.teachersAmount + " " + translateFilter('person_unit'))
      }

      var currentTeacher = 0

      service.getTeachers(ctrl.classroomId).then(function(resp) {
        ctrl.teachersRawData = resp.data
        ctrl.teachers = formattingTeacherData(resp.data)
        ctrl.teachersAmount = ctrl.teachers.length
        $('#teacher-list').bootstrapTable({
          columns: tableColumnSetting,
          data: ctrl.teachers
        })
        displayTeacherAmount()
      });

      ctrl.selectTeacher = function(){
        $uibModal.open({
          animation: true,
          backdrop: 'static',
          keyboard: false,
          scope: $scope,
          templateUrl: "<%= asset_path('main/angular/components/modal/selectMember/selectMemberModalView.html') %>",
          controller: 'selectMemberModalCtrl as selectMember',
          size: 'md',
          resolve: {
            resources: ['$ocLazyLoad', 'ASSETS', function($ocLazyLoad, ASSETS) {
              return $ocLazyLoad.load([
                ASSETS.somsri.main.select_member_modal
              ]);
            }],
            options: function() {
              return {
                currentMemberIds: getCurrentTeacherIds(),
                classroomId: ctrl.classroomId,
                label: translateFilter('teacher'),
                type: "teacher"
              }
            }
          }
        }).result.then(function (selectedTeacher) {
          selectedTeacher.forEach(function(teacher) {
            ctrl.teachersRawData.push(teacher)
          })
          var addingTeachers = formattingTeacherData(selectedTeacher)
          ctrl.teachersAmount += addingTeachers.length
          $('#teacher-list').bootstrapTable('append', addingTeachers)
          displayTeacherAmount()
        })
      }

      ctrl.removeTeacher = function(id){
        var teachers = []
        $('#teacher-list').bootstrapTable('getData').forEach(function(teacher) {
          if(teacher.id != id){ teachers.push(teacher) }
        })
        $('#teacher-list').bootstrapTable('load', teachers)
        ctrl.teachersAmount -= 1
        displayTeacherAmount()
      }

      function formattingStudentData(data) {
        var result = []
        if(data){
          data.forEach(function(student) {
            var onClick = angularCtrlStr + '.removeStudent(' + student.id + ')'
            result.push({
              id: student.id,
              img: imgFormatter(student.img),
              name: nameFormatter(student.name, '/students/' + student.id + '/edit#/'),
              unselect: '<i class="fa fa-times cursor-pointer color-red" aria-hidden="true" onclick="' + onClick + '"></i>'
            })
          });
        }
        return result
      }

      function getCurrentStudentIds(){
        var studentIds = []
        $('#student-list').bootstrapTable('getData').forEach(function(student) {
          studentIds.push(student.id)
        })
        return studentIds
      }

      function displayStudentAmount(){
        $('#student-list th[data-field="unselect"] .th-inner').html(translateFilter('amount2') + " " + ctrl.studentsAmount + " " + translateFilter('person_unit'))

      }

      var currentStudent = 0

      service.getStudents(ctrl.classroomId).then(function(resp) {
        ctrl.studentsRawData = resp.data
        ctrl.students = formattingStudentData(resp.data)
        ctrl.studentsAmount = ctrl.students.length
        $('#student-list').bootstrapTable({
          columns: tableColumnSetting,
          data: ctrl.students
        })
        displayStudentAmount()
      });

      ctrl.selectStudent = function(){
        $uibModal.open({
          animation: true,
          backdrop: 'static',
          keyboard: false,
          scope: $scope,
          templateUrl: "<%= asset_path('main/angular/components/modal/selectMember/selectMemberModalView.html') %>",
          controller: 'selectMemberModalCtrl as selectMember',
          size: 'md',
          resolve: {
            resources: ['$ocLazyLoad', 'ASSETS', function($ocLazyLoad, ASSETS) {
              return $ocLazyLoad.load([
                ASSETS.somsri.main.select_member_modal
              ]);
            }],
            options: function() {
              return {
                currentMemberIds: getCurrentStudentIds(),
                classroomId: ctrl.classroomId,
                label: translateFilter('student'),
                type: "student"
              }
            }
          }
        }).result.then(function (selectedStudent) {
          selectedStudent.forEach(function(student) {
            ctrl.studentsRawData.push(student)
          })
          var addingStudents = formattingStudentData(selectedStudent)
          ctrl.studentsAmount += addingStudents.length
          $('#student-list').bootstrapTable('append', addingStudents)
          displayStudentAmount()
        })
      }

      ctrl.removeStudent = function(id){
        var students = []
        $('#student-list').bootstrapTable('getData').forEach(function(student) {
          if(student.id != id){ students.push(student) }
        })
        $('#student-list').bootstrapTable('load', students)
        ctrl.studentsAmount -= 1
        displayStudentAmount()
      }

      ctrl.cancel = function(){
        $rootScope.openClassroomList()
      }

      ctrl.save = function(){
        var data = { teacher_ids: [], student_ids: [] }
        $('#teacher-list').bootstrapTable('getData').forEach(function(teacher) {
          data["teacher_ids"].push(teacher.id)
        })
        $('#student-list').bootstrapTable('getData').forEach(function(student) {
          data["student_ids"].push(student.id)
        })
        service.updateClassroomList(ctrl.classroomId, data).then(function(resp) {
          if(resp.data[0] == "SUCCESS"){
            $rootScope.openClassroomList()
          }
        })
      }
    });
  }]);
})();
