(function() {
  'use strict';
  angular.module('somsri.main.select_member_modal', [
    ])
  .controller('selectMemberModalCtrl', ['$uibModalInstance', '$uibModal', '$state', '$log', 'selectMemberModalService', 'options', function($uibModalInstance, $uibModal, $state, $log, service, options) {
    var ctrl = this
    ctrl.options = options
    var currentMemberIds = options.currentMemberIds
    var classroomId = options.classroomId
    var tableColumnSetting = [
      { field: 'check-box', checkbox: true, class: "check-box", width: "5%"},
      { field: 'img', title: "เลือกทั้งหมด", class:'img-column-with-checkbox font1_2em', width: "10%" },
      { field: 'name', class:"name-column-with-checkbox font1_2em", width: "85%", title: "จำนวนที่เลือก 0 คน"}
    ]

    var angularCheckBox = "angular.element(document.getElementById('angularCtrl')).scope().$root.onCheckBoxChange()"

    function imgFormatter(imgUrl) {
      if (imgUrl) {
        return '<div class="img-bg circle fix-img img-34x34" style="background: url('+ imgUrl +')"></div>';
      }
      return '<div class="img-bg bg-light-gray circle fix-img img-34x34"><i class="fa fa-user icon-default-img" aria-hidden="true"></i></div>'
    }

    function nameFormatter(name, url) {
      if(name){
        return '<a href="' + url + '" target="_blank">' + name + '</a>';
      }else{
        return '<a href="' + url + '" target="_blank">-</a>';
      }
    }

    function formattingMemberData(data) {
      var result = []
      if(data){
        data.forEach(function(member) {
          var memberUrl = '/somsri_payroll#/employees/' + member.id
          if(ctrl.options.type == "student"){
            memberUrl = '/students/' + member.id + '/edit#/'
          }
          var onClick = angularCheckBox + '.removeMember(' + member.id + ')'
          result.push({
            id: member.id,
            img: imgFormatter(member.img),
            name: nameFormatter(member.name, memberUrl)
          })
        });
      }
      return result
    }

    function displaySelectedAmount() {
      var amoutLabel = $('#member-select-list .name-column-with-checkbox .th-inner')
      var selectedNumber = $('#member-select-list').bootstrapTable('getAllSelections').length
      amoutLabel.html("จำนวนที่เลือก " + selectedNumber + " คน")
    }

    ctrl.membersRawData = []
    service.getMemberNotAssignClass(classroomId, currentMemberIds, ctrl.options.type).then(function(resp) {
      ctrl.membersRawData = resp.data
      ctrl.members = formattingMemberData(resp.data)
      $('#member-select-list').bootstrapTable({
        selectItemName: ctrl.options.type + "Id",
        search: true,
        toolbar: '.bt-toolbar',
        toolbarAlign: 'right',
        searchAlign: 'left',
        clickToSelect: true,
        maintainSelected: true,
        columns: tableColumnSetting,
        data: ctrl.members
      })
      $('#member-select-list').on('check.bs.table', displaySelectedAmount);
      $('#member-select-list').on('uncheck.bs.table', displaySelectedAmount);
      $('#member-select-list').on('check-all.bs.table', displaySelectedAmount);
      $('#member-select-list').on('uncheck-all.bs.table', displaySelectedAmount);
    });

    ctrl.submit = function(){
      var result = []
      var selecteds = $('#member-select-list').bootstrapTable('getAllSelections')
      ctrl.membersRawData.forEach(function(member) {
        var selectedIds = selecteds.map(function(selected) {
           return selected.id
        })
        if($.inArray(member.id, selectedIds) != -1){
          result.push(member)
        }
      })
      $uibModalInstance.close(result)
    }

    ctrl.cancel = function () {
      $uibModalInstance.close([])
    }

    ctrl.createMember = function(){
      $uibModal.open({
        animation: true,
        backdrop: 'static',
        keyboard: false,
        templateUrl: "<%= asset_path('main/angular/components/modal/createMember/createMemberModalView.html') %>",
        controller: 'createMemberModalCtrl as create',
        size: 'md',
        resolve: {
          resources: ['$ocLazyLoad', 'ASSETS', function($ocLazyLoad, ASSETS) {
            return $ocLazyLoad.load([
              ASSETS.somsri.main.create_member_modal
            ]);
          }],
          options: function() {
            return options
          }
        }
      }).result.then(function (createdMember) {
        if(createdMember){
          ctrl.membersRawData.push(createdMember)
          var addingMember = formattingMemberData([createdMember])
          $('#member-select-list').bootstrapTable('prepend', addingMember)
        }
      })
    }

  }]);
})();
