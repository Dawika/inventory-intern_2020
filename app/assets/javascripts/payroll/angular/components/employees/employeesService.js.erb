(function() {
  'use strict';

  angular.module('somsri.payroll.employees.service', [
  ])
  .service('employeesService', ['$http', function($http) {
    this.getAllEmployee = function() {
      return $http.get('/employees');
    };

    this.invite = function(id) {
      return $http.post('/employees/' + id + '/invite')
    }

    this.getEmployeeDeduction = function(id, payroll_id, data) {
      data.payroll.note = ''
      return $http.get('/employees/' + id + '/calculate_deduction', 
        { 
          params: { 
            payroll: data.payroll,
            employee_type: data.employee.employee_type,
            employee_pay_pvf: data.employee.pay_pvf,
            employee_pay_s_ins: data.employee.pay_social_insurance 
          } 
        } 
      );
    };

    this.getEmployee = function(id, payroll_id, current_employee) {
      if (!id) {
        return $http.get('/employees/me')
      } else {
        if (id && id != 0) {
          if(payroll_id){
            return $http.get('/employees/' + id, { params: { payroll_id: payroll_id } });
          } else {
            return $http.get('/employees/' + id);
          }
        }
      }
    };

    this.getEmployeePayrolls = function(id) {
      return $http.get('employees/' + id +'/payrolls');
    };

    this.saveEmployee = function(id, data) {
      return $http.patch('/employees/' + id, data);
    };

    this.createEmployee = function(data, role) {
      return $http.post('/employees/', data, {
        params : {
          'roles[]': role
        }
      });
    };

    this.archiveEmployee = function(employee_id) {
      return $http.delete('/employees/' + employee_id);
    };

    this.restoreEmployees = function(employee_id) {
      return $http.post('/employees/' + employee_id + '/restore');
    };

    this.destroyEmployees = function(employee_id) {
      return $http.delete('/employees/' + employee_id + '/real_destroy');
    }

  }]);
})();
