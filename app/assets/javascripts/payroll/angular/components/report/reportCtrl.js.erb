(function() {
  'use strict';
  angular.module('somsri.payroll.report', [
  ])
  .controller('reportCtrl', ['$compile', '$scope', '$window', '$filter', '$rootScope', 'reportService', 'slipService', '$timeout', '$sce',function($compile, $scope, $window, $filter, $rootScope, reportService, slipService, $timeout, $sce) {
    $rootScope.menu = "รายงาน"
    var ctrl = this
    $rootScope.loadAndAuthorizeResource("payroll", function(){
      ctrl.total = 0
      ctrl.employees
      ctrl.effectiveDates = []
      ctrl.currentDateString = ""

      ctrl.employeeTypeMode = {
        normal: true,
        temporary: true,
        probationary: true,
        daily: true
      }

      ctrl.getNetSalary = function(employee) {
        return employee.salary - employee.extra_fee + employee.extra_pay;
      }

      function getTotalSalary(employees)  {
        var totalSalary = 0
        var totalExtraFee = 0
        var totalExtraPay = 0

        employees.forEach(function(employee) {
          totalSalary += employee.salary
          totalExtraFee += employee.extra_fee
          totalExtraPay += employee.extra_pay
        })

        return {
          salary: totalSalary,
          extraFee: totalExtraFee,
          extraPay: totalExtraPay,
          netSalary: totalSalary - totalExtraFee + totalExtraPay
        }
      }

      ctrl.switchMonth = function(effectiveDate) {
        reportService.getPayroll(effectiveDate['date_time']).then(function(resp) {
          ctrl.employees = resp.data
          ctrl.employees_origin = JSON.parse(JSON.stringify(ctrl.employees));
          ctrl.total = getTotalSalary(ctrl.employees);
          ctrl.currentDateString = effectiveDate["date_string"];
          ctrl.currentEffectiveDate = effectiveDate
          ctrl.employeeTypeFilter();
        });
      }

      ctrl.printSlip = function(id, payroll_id) {
        clearForPrint();
        var containerDiv = $('#payroll-report')
        ctrl.employee_slips = []
        slipService.employeeSlip(id, payroll_id).then(function(resp) {
          ctrl.employee_slips = [resp.data]
          ctrl.employee_slips[0].header = $sce.trustAsHtml(ctrl.employee_slips[0].header);
          if($window.navigator.userAgent.indexOf('Chrome') == -1) {
            var slipForSchool = $compile('<slip-content info=report title="สำหรับโรงเรียน" class="for_print safari"/>');
            var slipForEmployee = $compile('<slip-content info=report title="" class="for_print safari"/>');
          } else {
            var slipForSchool = $compile('<slip-content info=report title="สำหรับโรงเรียน" class="for_print"/>');
            var slipForEmployee = $compile('<slip-content info=report title="" class="for_print"/>');
          }

          // var slipSchoolDiv = slipForSchool($scope);
          var slipEmployeeDiv = slipForEmployee($scope);

          // angular.element(containerDiv).append(slipSchoolDiv);
          // angular.element(containerDiv).append('<div class="separate for_print"></div>');
          angular.element(containerDiv).append(slipEmployeeDiv);

          setTimeout(function() {
            window.print();
            $("slip-content").remove()
            $(".separate").remove()
          }, 500);
        })
      }

      ctrl.printSlips = function() {
        clearForPrint();
        var containerDiv = $('#payroll-report')
        ctrl.employee_slips = []
        var payroll_ids = []

        for(var i = 0; i < ctrl.employees.length; i++ ){
          payroll_ids.push(ctrl.employees[i].payroll_id);
        }
        slipService.employeeSlips(payroll_ids).then(function(resp) {
          ctrl.employee_slips = resp.data
          for(var i = 0; i < ctrl.employee_slips.length; i++){
            ctrl.employee_slips[i].header = $sce.trustAsHtml(ctrl.employee_slips[i].header);
          }
          if($window.navigator.userAgent.indexOf('Chrome') == -1) {
            var slipForSchool = $compile('<slip-content info=report title="สำหรับโรงเรียน" class="for_print safari"/>');
            var slipForEmployee = $compile('<slip-content info=report title="" class="for_print safari"/>');
          } else {
            var slipForSchool = $compile('<slip-content info=report title="สำหรับโรงเรียน" class="for_print"/>');
            var slipForEmployee = $compile('<slip-content info=report title="" class="for_print"/>');
          }
          var slipEmployeeDiv = slipForEmployee($scope);
          angular.element(containerDiv).append(slipEmployeeDiv);
          setTimeout(function() {
            window.print();
            $("slip-content").remove()
            $(".separate").remove()
          }, 500);
        })
      }

      ctrl.printReport = function() {
        clearForPrint();
        ctrl.reportCtrl = angular.copy(ctrl);
        ctrl.reportCtrl.employees;
        for (var i = 0; i < ctrl.employees.length; i += 30) {
          ctrl.reportCtrl.employees.push(ctrl.employees.slice(i, i + 30));
        }
        var containerDiv = $('#payroll-report')
        var reportDiv = $compile('<report-content model=report.reportCtrl class="for_print"/>')($scope);
        angular.element(containerDiv).append(reportDiv);
        setTimeout(function() {
          window.print();
        }, 500);
      }

      function clearForPrint(){
        $('slip-all-content').remove();
        $('slip-content').remove();
        $('report-content.for_print').remove();
        $('div.fixed-table-footer').remove();
      }


      function getPayrolls() {
        reportService.getMonths().then(function(resp) {
          if (resp.data.length > 0) {
            ctrl.effectiveDates = resp.data
            var current = ctrl.effectiveDates[0]
            reportService.getPayroll(current['date_time']).then(function(resp) {
              ctrl.employees = resp.data
              ctrl.employees_origin = JSON.parse(JSON.stringify(ctrl.employees));
              ctrl.total = getTotalSalary(ctrl.employees);
              getTotalSalary(ctrl.employees)
              ctrl.currentDateString = current['date_string']
              ctrl.currentEffectiveDates = current
              $scope.report.bootstrapTableController(ctrl.employees);
              //$table.bootstrapTable('load', ctrl.employees);
            });
          }
        });
      }

      ctrl.employeeTypeFilter = function (){
        var mode = [];
        if(ctrl.employeeTypeMode.normal){
          mode.push("ลูกจ้างประจำ");
        }
        if(ctrl.employeeTypeMode.temporary){
          mode.push("ลูกจ้างชั่วคราว");
        }
        if(ctrl.employeeTypeMode.probationary){
          mode.push("ลูกจ้างทดลองงาน");
        }
        if(ctrl.employeeTypeMode.daily){
          mode.push("ลูกจ้างรายวัน");
        }
        var employees = JSON.parse(JSON.stringify(ctrl.employees_origin));
        for(var i = 0; i < employees.length; i++){
          if(mode.indexOf(employees[i].employee_type) < 0){
            employees[i] = null;
          }
        }
        var newArray = new Array();
        for (var i = 0; i < employees.length; i++) {
          if (employees[i]) {
            newArray.push(employees[i]);
          }
        }
        ctrl.employees = newArray;
        $scope.report.bootstrapTableController(ctrl.employees);
        //console.log($scope.report)
        //console.log(ctrl.employees)
        //$table.bootstrapTable('load', ctrl.employees);

        ctrl.total = getTotalSalary(ctrl.employees);
        getTotalSalary(ctrl.employees);
      }
      getPayrolls();
    });
  }]);
})();
