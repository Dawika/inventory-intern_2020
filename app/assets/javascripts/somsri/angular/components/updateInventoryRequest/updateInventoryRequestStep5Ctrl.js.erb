(function() {
	angular.module('somsri.somsri.update_inventory_request_step5', [])
    .controller('updateInventoryRequestStep5Ctrl', ['$compile', '$scope', '$window', '$filter', '$rootScope', '$timeout', 'translateFilter', '$uibModal', 'Upload', '$state', "inventoryRequestService", "settingService", "employeesService" ,
     function($compile, $scope, $window, $filter, $rootScope, $timeout, translateFilter, $uibModal, Upload, $state, service, settingService, employeesService) {
	$rootScope.menu = translateFilter("inventory_request")
		var ctrl = this
		ctrl.real_id = $state.params.id;
		ctrl.step = $rootScope.step

		function initData() {
      if (!ctrl.real_id) { 
        return
      }

      service.show(ctrl.real_id).then(function(resp) {
        var value = resp.data
        ctrl.datas = resp.data
        ctrl.name = value.item_name
        ctrl.description = value.description
        ctrl.price = value.price
        ctrl.user_name = value.user_name
        ctrl.request_date = new Date(value.request_date)
        ctrl.employee_id_request = value.employee_id
        ctrl.inventory_status = value.inventory_status
        ctrl.request_type = value.request_type
        if (ctrl.request_type == "request") {
          ctrl.show_return_date = true
          ctrl.show_text = false
          ctrl.change_request_type = translateFilter("withdraw_equipment")
        } else {
          ctrl.show_return_date = false
          ctrl.show_text = true
          ctrl.change_request_type = translateFilter("new_request_inventory")
        }
        if (value.request_date) {
          ctrl.datas.request_date = new Date(ctrl.datas.request_date)
        } else {
          ctrl.datas.request_date = null
        }

        if (value.define_return_date) {
          ctrl.define_return_date = $filter('date')(new Date(value.define_return_date), 'dd/MM/yyyy')
        } else {
          ctrl.define_return_date = "-"
        }

        ctrl.manage_inventory_request = value.manage_inventory_request

        if (ctrl.manage_inventory_request) {
          ctrl.step = ctrl.manage_inventory_request.step
          ctrl.manage_inventory_id = ctrl.manage_inventory_request.id
        }
        getEmployeeById(ctrl.employee_id_request)
        setData()
      })
    }

    function setData() {
      //setp1
      ctrl.save_by = ctrl.manage_inventory_request.save_by
      ctrl.accept_date = ctrl.manage_inventory_request.accept
      ctrl.date_save_step1 = $filter('date')(new Date(ctrl.manage_inventory_request.date_save_step1), 'dd/MM/yyyy HH:mm')
      //setp2
      ctrl.save_by_step2 = ctrl.manage_inventory_request.save_by_step2
      ctrl.date_purchase = $filter('date')(new Date(ctrl.manage_inventory_request.date_purchase), 'dd/MM/yyyy')
      ctrl.date_purchase_save = ctrl.manage_inventory_request.date_purchase
      ctrl.date_send = $filter('date')(new Date(ctrl.manage_inventory_request.date_send), 'dd/MM/yyyy')
      ctrl.date_send_save = ctrl.manage_inventory_request.date_send
      ctrl.price_step2 = parseFloat(ctrl.manage_inventory_request.price)
      ctrl.date_save_step2 = $filter('date')(new Date(ctrl.manage_inventory_request.date_save_step2), 'dd/MM/yyyy HH:mm')
      //setp3
      ctrl.get_date_save = ctrl.manage_inventory_request.get_date
      ctrl.get_date = $filter('date')(new Date(ctrl.manage_inventory_request.get_date), 'dd/MM/yyyy')
      ctrl.save_by_step3 = ctrl.manage_inventory_request.save_by_step3
      ctrl.date_get_inventory = ctrl.manage_inventory_request.get_date
      ctrl.buy_slip =ctrl.manage_inventory_request.buy_slip
      ctrl.end_warranty = $filter('date')(new Date(ctrl.manage_inventory_request.end_warranty), 'dd/MM/yyyy')
      ctrl.date_save_step3 = $filter('date')(new Date(ctrl.manage_inventory_request.date_save_step3), 'dd/MM/yyyy HH:mm')
      //step4
      ctrl.employee_name = ctrl.manage_inventory_request.send_to_employee_name
      ctrl.employee_id = ctrl.manage_inventory_request.send_to_employee_id
      ctrl.save_by_step4 = ctrl.manage_inventory_request.save_by_step4
      ctrl.date_save_step4 = $filter('date')(new Date(ctrl.manage_inventory_request.date_save_step4), 'dd/MM/yyyy HH:mm')
    }

    function getEmployeeById(id) {
      if (id && id != 0) {
        employeesService.getEmployee(id).then(function(resp) {
          ctrl.employee_name = resp.data.employee_display_name
          ctrl.employee_id = resp.data.employee.id
        })
      }
    }

		ctrl.save = function() {
      var changePrice = parseFloat(ctrl.price)
      if (changePrice == ctrl.price_step2) {
        changePrice = parseFloat(ctrl.price_step2)
      }
      var checngeRequestDate = ctrl.datas.request_date

      var inventory_datas = {
        user_name: ctrl.user_name,
        item_name: ctrl.name,
        description: ctrl.description,
        price: changePrice,
        request_date: checngeRequestDate,
        employee_id: ctrl.employee_id_request
      }

      if (ctrl.real_id) {
        updateInventoryRequest(inventory_datas, ctrl.real_id)
      } 
    }

    function updateInventoryRequest(inventory_datas, id) {
      var data = {
        manage_inventories_requests: {
          step: 5,
          save_by_step5: ctrl.name_setting
        }
      }
      $rootScope.step = null
      service.updateInventoryRequest(inventory_datas, id).then(function(resp) {
        if (ctrl.manage_inventory_id) {
          updateManageInventory(data)
        } else {
          createManageInventory(data)
        }
      }, function(e){

      })
    }

    ctrl.backToRootView = function() {
      $rootScope.openInventory(1)
    }

    function createManageInventory(data) {
      service.createManageInventoryRequest(data, ctrl.real_id).then(function(resp) {
        $rootScope.openInventory(1)
      })
    }

    function updateManageInventory(data) {
      service.updateManageInventoryRequest(data, ctrl.real_id , ctrl.manage_inventory_id).then(function(resp) {
        $rootScope.openInventory(1)
      })
    }

		function getSetting() {
      settingService.getSetting().then(function(resp) {
        ctrl.name_setting = resp.data.user.full_name
      })
    }

    ctrl.openRequestDatePopup = function() {
      ctrl.requestDatePopup.opened = true;
    };

    ctrl.requestDatePopup = {
      opened: false
    };

    getSetting()
    initData()
    
	}]);
})();