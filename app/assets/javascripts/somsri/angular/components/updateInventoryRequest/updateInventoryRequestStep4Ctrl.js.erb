(function() {
	angular.module('somsri.somsri.update_inventory_request_step4', [])
    .controller('updateInventoryRequestStep4Ctrl', ['$compile', '$scope', '$window', '$filter', '$rootScope', '$timeout', 'translateFilter', '$uibModal', 'Upload', '$state', "inventoryRequestService", "employeesService", "settingService" , 
      function($compile, $scope, $window, $filter, $rootScope, $timeout, translateFilter, $uibModal, Upload, $state, service, employeesService, settingService) {
	$rootScope.menu = translateFilter("inventory_request")
		var ctrl = this
		ctrl.real_id = $state.params.id;
		ctrl.filterKeyword = ""
		ctrl.checkName = true
    ctrl.step = $rootScope.step

    function initData() {
      if (!ctrl.real_id) { 
        return
      }

      service.show(ctrl.real_id).then(function(resp) {
        var value = resp.data
        ctrl.datas = resp.data
        ctrl.name = value.item_name
        ctrl.description = value.description
        ctrl.price = value.price
        ctrl.user_name = value.user_name
        ctrl.request_date = new Date(value.request_date)
        ctrl.inventory_status = value.inventory_status
        ctrl.manage_inventory = value.manage_inventory
        ctrl.step_to = ctrl.manage_inventory.step
        ctrl.manage_inventory_id = ctrl.manage_inventory.id
        if (value.request_date) {
          ctrl.datas.request_date = new Date(ctrl.datas.request_date)
        } else {
          ctrl.datas.request_date = null
        }
        checkStep()
      })
    }

    function setData() {
      //setp1
      ctrl.save_by = ctrl.manage_inventory.step1.save_by
      //setp2
      ctrl.save_by_step2 = ctrl.step.step2.save_by
      ctrl.date_purchase_save = ctrl.manage_inventory.step2.date_purchase
      ctrl.date_send_save = ctrl.manage_inventory.step2.date_send
      ctrl.date_purchase = $filter('date')(new Date(ctrl.manage_inventory.step2.date_purchase), 'dd/MM/yyyy')
      ctrl.date_send = $filter('date')(new Date(ctrl.manage_inventory.step2.date_send), 'dd/MM/yyyy')
      ctrl.price_step2 = ctrl.manage_inventory.step2.price
      //step3
      ctrl.get_date_save = ctrl.manage_inventory.step3.get_date
      ctrl.get_date = $filter('date')(new Date(ctrl.manage_inventory.step3.get_date), 'dd/MM/yyyy')
      ctrl.buy_slip = ctrl.manage_inventory.step3.buy_slip
      ctrl.end_warranty_save = ctrl.manage_inventory.step3.end_warranty
      ctrl.end_warranty =  $filter('date')(new Date(ctrl.manage_inventory.step3.end_warranty), 'dd/MM/yyyy') 
      ctrl.save_by_step3 = ctrl.manage_inventory.step3.save_by
      //step4
      ctrl.employee_name = ctrl.manage_inventory.step4.send_to_employee_name
      ctrl.employee_id = ctrl.manage_inventory.step4.send_to_employee_id
      ctrl.save_by_step4 = ctrl.manage_inventory.step4.save_by
    }

		function checkStep() {
      if(!ctrl.step) {
        if (ctrl.step_to == 3) {
          setData()
        } else {
          if (ctrl.real_id) {
            $rootScope.updateInventoryRequest(ctrl.real_id)
          }
        }
      } else {
        //setp1
        ctrl.save_by = ctrl.step.step1.save_by
        //setp2
        ctrl.save_by_step2 = ctrl.step.step2.save_by
        ctrl.date_purchase_save = ctrl.step.step2.date_purchase
        ctrl.date_send_save = ctrl.step.step2.date_send
        ctrl.date_purchase = $filter('date')(new Date(ctrl.step.step2.date_purchase), 'dd/MM/yyyy')
        ctrl.date_send = $filter('date')(new Date(ctrl.step.step2.date_send), 'dd/MM/yyyy')
        ctrl.price_step2 = ctrl.step.step2.price
        //setp3
        ctrl.get_date_save = ctrl.step.step3.get_date
        ctrl.get_date = $filter('date')(new Date(ctrl.step.step3.get_date), 'dd/MM/yyyy')
        ctrl.buy_slip = ctrl.step.step3.buy_slip
        ctrl.end_warranty_save = ctrl.step.step3.end_warranty
        ctrl.end_warranty =  $filter('date')(new Date(ctrl.step.step3.end_warranty), 'dd/MM/yyyy') 
        ctrl.save_by_step3 = ctrl.step.step3.save_by
        //setp4
        ctrl.employee_name = ctrl.step.step4.send_to_employee_name
        ctrl.employee_id = ctrl.step.step4.send_to_employee_id
        ctrl.save_by_step4 = ctrl.step.step4.save_by
      }
		}

		function initDatas(){
       if(!ctrl.datas) { ctrl.datas = {} }
     }
	
	  function autoFillEmployee($item){
      if($item.id){
        for(var i = 0;i < ctrl.employee_lists.length; i++){
          if($item.id == ctrl.employee_lists[i].id){
            initDatas();
            ctrl.checkName = false
          }
        }
      }
    }

    function autoCheckName(data) {
    	if(data[0].id){
        for(var i = 0;i < ctrl.employee_lists.length; i++){
          if(data[0].id == ctrl.employee_lists[i].id){
            ctrl.checkName = false
          } else {
        		ctrl.checkName = true
        	}
        }
      }
    }

    ctrl.onChangeName = function() {
    	var data = []
    	data.push({
    		name: ctrl.employee_name,
        id: -1
    	})
      autoCheckName(data);
    }

		ctrl.onSelectEmployeeFullName = function($item) {
      ctrl.employee_name = $item.name;
      ctrl.employee_id = $item.id
      autoFillEmployee($item);
     };

		function getEmployee(){
      ctrl.employee_lists = []
      ctrl.employee_lists.push({
        name: translateFilter("no_employee_selection"),
        id: 0
     	})

      employeesService.getAllEmployee().then(function(resp) {
        if (resp.data.length > 0) {
          for (var i = 0; i < resp.data.length; i++) {
            var employees = resp.data[i]
            if (employees.name !== ctrl.displayName) {
              ctrl.employee_lists.push({
                name: employees.name,
                id: employees.id
              })
            }
          }
        }
      });
    };

    ctrl.save = function() {

      var changePrice = parseFloat(ctrl.price)
      var checngeRequestDate = $filter('date')(new Date(ctrl.datas.request_date), 'yyyy-MM-ddTh:MM:ss')

      var inventory_datas = {
        user_name: ctrl.user_name,
        item_name: ctrl.name,
        description: ctrl.description,
        price: changePrice,
        request_date: checngeRequestDate
      }

      if (ctrl.real_id) {
        updateInventoryRequest(inventory_datas, ctrl.real_id)
      } 
    }

    function updateInventoryRequest(inventory_datas, id) {
      var data = {
        manage_inventories_requests: {
          step: 4,
          accept: "accept",
          save_by: ctrl.save_by,
          save_by_step2: ctrl.save_by_step2,
          date_purchase: ctrl.date_purchase_save,
          date_send: ctrl.date_send_save,
          price: ctrl.price_step2,
          save_by_step3: ctrl.save_by_step4,
          get_date: ctrl.get_date_save,
          buy_slip: ctrl.buy_slip,
          end_warranty: ctrl.end_warranty_save,
          save_by_step4: ctrl.name_setting,
          send_to_employee_name: ctrl.send_to_employee_name,
          send_to_employee_id: ctrl.send_to_employee_id
        }
      }
      service.updateInventoryRequest(inventory_datas, id).then(function(resp) {
        if (!ctrl.manage_inventory_id) {
          updateManageInventory(data)
        } else {
          createManageInventory(data)
        }
      }, function(e){

      })
    }

    function createManageInventory(data) {
      service.createManageInventoryRequest(data, ctrl.real_id).then(function(resp) {
        $rootScope.openInventory(1)
      })
    }

    function updateManageInventory(data) {
      service.updateManageInventoryRequest(data, ctrl.real_id , ctrl.manage_inventory_id).then(function(resp) {
        $rootScope.openInventory(1)
      })
    }

    ctrl.cancel = function() {
      $window.history.back();
    }

    ctrl.continue = function() {
  		ctrl.step.step4.send_to_employee_name = ctrl.employee_name
    	ctrl.step.step4.send_to_employee_id = ctrl.employee_id
    	ctrl.step.step4.save_by = ctrl.name_setting 
      var data = {
        first_name: ctrl.employee_name
      }
      if (ctrl.checkName) {
        employeesService.createEmployee(data).then(function(resp) {
          ctrl.employee_id = resp.data.employee.id
          ctrl.step.step4.send_to_employee_id = ctrl.employee_id
        })
      }
      console.log(ctrl.step)
      $rootScope.updateInventoryRequestStep5(ctrl.step, ctrl.real_id)
    }

    function getSetting() {
      settingService.getSetting().then(function(resp) {
        ctrl.name_setting = resp.data.user.full_name
      })
    }

    getSetting()

   	getEmployee()
    initData()
	}]);
})();