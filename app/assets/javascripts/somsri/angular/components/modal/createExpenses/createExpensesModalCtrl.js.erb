(function() {
  'use strict';
  angular.module('somsri.rollcall.create_expenses_modal', [
  ])
.controller('createExpensesModalCtrl', ['$uibModalInstance', '$state', '$log', 'translateFilter', '$scope', function($uibModalInstance, $state, $log, translateFilter, $scope) {
  var ctrl = this;
  ctrl.message = '';
  ctrl.total = 0.00;
  ctrl.change_img = false;

  function initItemList() {
    var value = $scope.expenses.data;
    ctrl.detail = value.detail;
    ctrl.total_cost = value.total_cost;
    ctrl.effective_date = new Date(value.effective_date);
    ctrl.items = value.expense_items;
    ctrl.expensesTotal();
    ctrl.imgDisplay = value.img;

    if (value.expenses_id)
      ctrl.expenses_id = value.expenses_id;

    if (!ctrl.detail && !ctrl.total_cost){
      ctrl.is_edit = false;
    } else {
      ctrl.is_edit = true;
    }
  }

    //add item and remove item
    ctrl.addNewItem = function() {
      addItem();
    };

    ctrl.removeNewItem = function(item) {
      ctrl.items.splice(item, 1);
      ctrl.expensesTotal();
      if (ctrl.items.length == 0){
        addItem();
      }
    };

    function addItem() {
      ctrl.items.push({amount:0, detail:"", cost:0.00, total_price:0.00});
    }

    // Calculates the sub total of the expenses
    ctrl.expensesTotal = function() {
      var total = 0.00;
      angular.forEach(ctrl.items, function(item){
        if (!item.amount){ item.amount = 0 }
        if (!item.cost){ item.cost = 0 }
        item.total_price = item.amount * item.cost;
        total += item.total_price;
      });
      ctrl.total = total;
    };

    //ctrl.total = item sum total price
    ctrl.save = function(){
      if (isValidateBeforSave()) {
        ctrl.message = "";
        $uibModalInstance.close({
          effective_date: ctrl.effective_date,
          expenses_id: ctrl.expenses_id,
          detail: ctrl.detail,
          total_cost: ctrl.total_cost,
          expense_items_attributes: ctrl.items,
          img_url: ctrl.imgUploadData
        });
      }
    };

    ctrl.cancel = function () {
      $uibModalInstance.close();
    };

    ctrl.readUrl = function($event) {
      if ($event.target.files && $event.target.files[0]) {
        var reader = new FileReader();
        reader.onload = function(e) {
          $('#img-display').attr('src', e.target.result);
        }
        reader.readAsDataURL($event.target.files[0]);
      }
    }

    function isValidateBeforSave() {
      //Don't want item was not entered.
      var items_found = ctrl.items.filter(function(item) { return item.detail || item.amount || item.cost });

      if (!ctrl.total_cost){
        ctrl.message = translateFilter('input_total_price');
        return false;
      } else if (items_found.length == 0) {
        ctrl.message = "";
        return true;
      } else if (isValidExpenseItem(items_found)) {
        if (ctrl.total_cost < 0 || ctrl.total < 0){
          ctrl.message = translateFilter('check_total_price');
          return false;
        } else if (parseFloat(ctrl.total.toFixed(2)) == parseFloat(ctrl.total_cost)){
          ctrl.message = "";
          return true;
        } else {
          ctrl.message = translateFilter('check_line_item_or_total_price');
          return false;
        }
      }else {
        ctrl.message = translateFilter('can_not_save')
        return false;
      }
    };

    function isValidExpenseItem(items) {
      for (var i = 0; i < items.length ; i++){
        if (!items[i].detail || !items[i].amount || !items[i].cost || items[i].amount < 0 || items[i].cost < 0){
          return false;
        }
      }
      return true;
    };

    initItemList();

  }]);
})();
